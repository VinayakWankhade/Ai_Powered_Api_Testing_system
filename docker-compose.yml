version: '3.8'

services:
  # Main API Service
  api:
    build: .
    command: api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/api_testing
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CHROMADB_PATH=/app/data/chromadb
      - RL_MODEL_PATH=/app/data/rl_models
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Dashboard Service
  dashboard:
    build: .
    command: dashboard
    ports:
      - "8050:8050"
    environment:
      - API_BASE_URL=http://api:8000/api/v1
    depends_on:
      - api
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=api_testing
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Celery Worker (for background tasks)
  worker:
    build: .
    command: worker
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/api_testing
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
      - dashboard
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    driver: bridge
